---
alwaysApply: true
---

## 分支策略

- **主分支 (main/master)**：生产环境代码，受保护
- **开发分支 (develop)**：开发环境代码
- **功能分支 (feature/xxx)**：新功能开发
- **修复分支 (fix/xxx)**：bug 修复
- **热修复分支 (hotfix/xxx)**：紧急修复

## 提交规范 (Conventional Commits)

```
<type>(<scope>): <description>

[optional body]

[optional footer(s)]
```

**提交类型：**

- `feat`: 新功能
- `fix`: 修复 bug
- `refactor`: 重构代码
- `perf`: 性能优化
- `test`: 测试相关
- `docs`: 文档更新
- `style`: 代码格式调整
- `build`: 构建系统或依赖更新
- `ci`: CI/CD 配置更新

**示例：**

```
feat(user): 添加用户注册功能

- 实现用户注册接口
- 添加邮箱验证逻辑
- 集成短信验证服务

Closes #123
```

## 代码审查要点

- **功能正确性**：代码是否实现了预期功能
- **代码质量**：是否遵循编码规范和最佳实践
- **性能考虑**：是否存在性能问题
- **安全性**：是否存在安全漏洞
- **测试覆盖**：是否有足够的测试覆盖## 分支策略

- **主分支 (main/master)**：生产环境代码，受保护
- **开发分支 (develop)**：开发环境代码
- **功能分支 (feature/xxx)**：新功能开发
- **修复分支 (fix/xxx)**：bug 修复
- **热修复分支 (hotfix/xxx)**：紧急修复

## 提交规范 (Conventional Commits)

```
<type>(<scope>): <description>

[optional body]

[optional footer(s)]
```

**提交类型：**

- `feat`: 新功能
- `fix`: 修复 bug
- `refactor`: 重构代码
- `perf`: 性能优化
- `test`: 测试相关
- `docs`: 文档更新
- `style`: 代码格式调整
- `build`: 构建系统或依赖更新
- `ci`: CI/CD 配置更新

**示例：**

```
feat(user): 添加用户注册功能

- 实现用户注册接口
- 添加邮箱验证逻辑
- 集成短信验证服务

Closes #123
```

## 代码审查要点

- **功能正确性**：代码是否实现了预期功能
- **代码质量**：是否遵循编码规范和最佳实践
- **性能考虑**：是否存在性能问题
- **安全性**：是否存在安全漏洞
- **测试覆盖**：是否有足够的测试覆盖