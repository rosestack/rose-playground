---
alwaysApply: true
---

# Java代码注释规范与指南

请为我的Java代码添加精简但有效的中文注释，遵循以下规范：

## 基本注释要求

1. **语言**：所有注释必须使用中文，如果存在旧注释请先删除
2. **格式**：使用标准JavaDoc格式（/** ... */）
3. **范围**：为类、接口、枚举、方法、重要字段添加注释
4. **内容原则**：保留关键信息，避免冗长描述，突出核心功能和特性

## 不同元素的注释规范

### 类/接口/枚举注释

```java
/**
 * [类/接口/枚举]的简要描述（一句话概括其用途）
 * <p>
 * 简要说明主要职责和功能，避免过多细节。
 * <p>
 * <h3>核心特性：</h3>
 * <ul>
 *   <li>特性一</li>
 *   <li>特性二</li>
 * </ul>
 * <p>
 * <h3>使用示例：</h3>
 * <pre>{@code
 * // 这里可以包含详细的代码示例
 * // 展示类的典型使用方式
 * // 可以包含多个相关方法调用
 * // 重要场景应该包含必要的注释说明
 * }</pre>
 * <p>
 * 说明：示例应该简洁但有足够细节，展示类的核心用法。
 * 对于复杂类，可以包含多个简短的示例片段。
 *
 * @author 作者名
 * @since 引入版本
 * @see 相关类的引用
 */
```

### 方法注释

```java
/**
 * 方法的简要描述（一句话概括其功能）
 *
 * @param 参数名 参数的简要描述
 * @return 返回值的简要描述（如果方法返回void则省略）
 * @throws 异常类名 抛出此异常的条件
 */
```

### 字段注释

```java
/** 字段的简要描述，包括其用途 */
private Type fieldName;
```

### 枚举值注释

```java
/** 枚举常量的简要描述 */
ENUM_VALUE,
```

## 特殊场景注释指南

### 1. 配置类注释

重点说明：

- 配置的主要作用
- 简要使用说明

### 2. 工具类注释

重点说明：

- 工具类的主要用途
- 是否线程安全
- 关键方法概述

### 3. 接口/抽象类注释

重点说明：

- 设计意图
- 核心职责
- 实现/继承要点

## 注释最佳实践

1. **保持精简**：避免冗余和过度描述
2. **突出重点**：优先说明核心功能和特性
3. **必要的警告**：标记重要注意事项
4. **避免废话**：不要注释显而易见的内容
5. **保持更新**：代码变更时同步更新注释

## 精简示例

### 配置类注释示例

```java
/**
 * Bean Validation 框架配置类
 * <p>
 * 提供 Hibernate Validator 的自定义验证配置，支持国际化和快速失败行为。
 * <p>
 * <h3>核心特性：</h3>
 * <ul>
 *   <li>支持国际化验证消息</li>
 *   <li>快速失败验证模式</li>
 * </ul>
 *
 * @author chensoul
 * @since 1.0.0
 * @see Validator
 * @see MessageSource
 */
```

### 方法注释示例

```java
/**
 * 根据条件分页查询用户信息
 * <p>
 * 支持多条件组合查询，结果按创建时间降序排列。
 *
 * @param queryParam 查询参数对象，不能为null
 * @param pageParam 分页参数，页码从1开始，不能为null
 * @return 分页结果对象
 * @throws IllegalArgumentException 当分页参数无效时
 */
```

### 枚举注释示例

```java
/**
 * 用户状态枚举
 * <p>
 * 定义用户生命周期中的各种状态。
 *
 * @author chensoul
 * @since 1.0.0
 */
public enum UserStatus {
    /** 待激活状态，用户已注册但尚未验证邮箱 */
    PENDING(0, "待激活"),

    /** 正常活跃状态，用户可正常使用系统 */
    ACTIVE(1, "正常"),

    // 其他枚举值...
}
```
