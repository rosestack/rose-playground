server:
  port: 8080
  servlet:
    context-path: /iot

spring:
  application:
    name: iot-platform
  
  profiles:
    active: dev
  
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/iot_platform?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai&allowPublicKeyRetrieval=true
    username: root
    password: password
    
    # Druid连接池配置
    druid:
      initial-size: 5
      min-idle: 5
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall,slf4j
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: false
        login-username: admin
        login-password: admin
  
  # Redis配置
  data:
    redis:
      host: localhost
      port: 6379
      password: 
      database: 0
      timeout: 10000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
          max-wait: 2000ms
  
  # 缓存配置
  cache:
    type: redis
    redis:
      time-to-live: 3600000
      cache-null-values: false
  
  # RabbitMQ配置
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    virtual-host: /
    listener:
      simple:
        acknowledge-mode: manual
        prefetch: 1
        concurrency: 1
        max-concurrency: 10

# MyBatis Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
      update-strategy: not_null
      insert-strategy: not_null
      select-strategy: not_empty
  mapper-locations: classpath*:mapper/*.xml

# SpringDoc OpenAPI配置
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
    doc-expansion: none

# 监控配置
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true

# 日志配置
logging:
  level:
    io.github.rose.iot: INFO
    org.springframework.security: DEBUG
    com.baomidou.mybatisplus: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%logger{50}] - %msg%n"
  file:
    name: logs/iot-platform.log
  logback:
    rollingpolicy:
      max-file-size: 100MB
      max-history: 30

# IoT平台配置
iot:
  # 设备配置
  device:
    # 设备认证超时时间（秒）
    auth-timeout: 30
    # 设备心跳超时时间（秒）
    heartbeat-timeout: 60
    # 设备离线超时时间（秒）
    offline-timeout: 300
  
  # MQTT配置
  mqtt:
    # MQTT Broker地址
    broker-url: tcp://localhost:1883
    # 连接超时时间（秒）
    connection-timeout: 30
    # 保持连接时间（秒）
    keep-alive-interval: 60
    # 清理会话
    clean-session: true
    # 自动重连
    automatic-reconnect: true
  
  # 数据存储配置
  data:
    # 历史数据保留天数
    retention-days: 90
    # 数据压缩启用
    compression-enabled: true
    # 批量写入大小
    batch-size: 1000
  
  # 规则引擎配置
  rule:
    # 规则执行超时时间（秒）
    execution-timeout: 30
    # 规则重试次数
    retry-count: 3
    # 规则重试间隔（秒）
    retry-interval: 5
  
  # 告警配置
  alarm:
    # 告警检查间隔（秒）
    check-interval: 60
    # 告警通知重试次数
    notification-retry-count: 3
    # 告警通知重试间隔（秒）
    notification-retry-interval: 300